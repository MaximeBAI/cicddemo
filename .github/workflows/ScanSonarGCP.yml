name: Scan-Sonar-GCP
on:
  workflow_dispatch: # Add this line to enable manual triggering
  workflow_call:
jobs:
  analyse:
    name: SonarMule Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache Sonar packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Call Sonar Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_INSTANCE: ${{ env.SONAR_INSTANCE }}
        run: mvn clean verify sonar:sonar -Dsonar.projectKey=cicddemo -Dsonar.host.url="${{ env.SONAR_INSTANCE }}" -Dsonar.login="${{ secrets.SONAR_TOKEN }}"
      
  tag:
    name: add tag
    needs: analyse
    runs-on: ubuntu-latest
    env: 
      CI_COMMIT_MESSAGE: Continuous Integration Analyse Successed 
      CI_COMMIT_AUTHOR: Continuous Integration
    steps:
    - uses: actions/checkout@v3
    # Commit and push all changed files.
    - name: GIT add TAG
      # Only run on main branch push (e.g. after pull request merge).
      #if: github.event_name == 'push'
      run: |
        git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
        git config --global user.email "username@users.noreply.github.com"
        # Generate a timestamp
        timestamp=$(date +"%Y%m%d%H%M%S")
        # Create a tag with the timestamp
        tagname="SonarPassed-$timestamp"
        git tag -a "$tagname" -m "${{ env.CI_COMMIT_MESSAGE }}"
        git push --tags
